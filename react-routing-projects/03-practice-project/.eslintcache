[{"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\index.js":"1","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\App.js":"2","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\layout\\Layout.js":"3","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\layout\\MainHeader.js":"4","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\pages\\AllQuotes.js":"5","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\QuoteList.js":"6","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\QuoteItem.js":"7","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\pages\\NewQuote.js":"8","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\QuoteForm.js":"9","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\UI\\LoadingSinner.js":"10","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\pages\\QuoteDetail.js":"11","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\store\\index.js":"12","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\store\\quote-slice.js":"13","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\store\\quote-actions.js":"14","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\NoQuotesFound.js":"15","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\HighlightedQuote.js":"16","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\Comments.js":"17","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\LoadComments.js":"18","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\CommentForm.js":"19"},{"size":392,"mtime":1667601002229,"results":"20","hashOfConfig":"21"},{"size":689,"mtime":1667766877584,"results":"22","hashOfConfig":"21"},{"size":261,"mtime":1667055284383,"results":"23","hashOfConfig":"21"},{"size":507,"mtime":1667048533268,"results":"24","hashOfConfig":"21"},{"size":214,"mtime":1667055011081,"results":"25","hashOfConfig":"21"},{"size":1702,"mtime":1667751553524,"results":"26","hashOfConfig":"21"},{"size":976,"mtime":1667749475834,"results":"27","hashOfConfig":"21"},{"size":144,"mtime":1667763948760,"results":"28","hashOfConfig":"21"},{"size":2380,"mtime":1668628074152,"results":"29","hashOfConfig":"21"},{"size":174,"mtime":1667594018957,"results":"30","hashOfConfig":"21"},{"size":890,"mtime":1667766667151,"results":"31","hashOfConfig":"21"},{"size":208,"mtime":1667658477590,"results":"32","hashOfConfig":"21"},{"size":1177,"mtime":1668627778951,"results":"33","hashOfConfig":"21"},{"size":5226,"mtime":1668628051187,"results":"34","hashOfConfig":"21"},{"size":332,"mtime":1667751370911,"results":"35","hashOfConfig":"21"},{"size":333,"mtime":1667764250248,"results":"36","hashOfConfig":"21"},{"size":457,"mtime":1668630764148,"results":"37","hashOfConfig":"21"},{"size":422,"mtime":1667767123284,"results":"38","hashOfConfig":"21"},{"size":935,"mtime":1668630690241,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"4s7fqg",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\index.js",[],["84","85"],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\App.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\layout\\Layout.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\layout\\MainHeader.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\pages\\AllQuotes.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\QuoteList.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\QuoteItem.js",["86"],"\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './QuoteItem.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteQuote, fetchQuotes } from '../../store/quote-actions';\r\n\r\n\r\nconst QuoteItem = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteQuoteHandler = () => {\r\n        \r\n        dispatch(deleteQuote({\r\n            id: props.id\r\n        }))\r\n        \r\n    }\r\n\r\n    return <div className={classes.quoteItem}>\r\n        <div className={classes.textWrapper}>\r\n            <div className={classes.title}> {props.title} </div>\r\n            <div className={classes.description}> {props.description} </div>\r\n        </div>\r\n        <div className={classes.buttonWrapper}>\r\n            <Link className={classes.btn} to={`/quotes/${props.id}`} >View Fullscreen</Link>\r\n            <button className={classes.btn} onClick={deleteQuoteHandler}>Delete Quote </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default QuoteItem;","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\pages\\NewQuote.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\QuoteForm.js",["87","88"],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\UI\\LoadingSinner.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\pages\\QuoteDetail.js",["89"],"import { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect } from \"react\";\r\nimport { getSignleQuote } from \"../store/quote-actions\";\r\nimport { Fragment } from \"react\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport Comments from \"../components/comments/Comments\";\r\n\r\nconst QuoteDetail = () => {\r\n    \r\n    const { quoteId } = useParams();\r\n    const dispatch = useDispatch();\r\n    const quote = useSelector((state) => state.quoteReducer.singleQuote);\r\n    // const quotes = useSelector((state) => state.quoteReducer.quotes);\r\n\r\n    useEffect(() => {\r\n       dispatch(getSignleQuote(quoteId));\r\n    }, [dispatch]);\r\n\r\n    return <Fragment>\r\n        <HighlightedQuote author={quote.author} description={quote.description} />\r\n        <Comments />\r\n    </Fragment>\r\n}\r\n\r\nexport default QuoteDetail;","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\store\\index.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\store\\quote-slice.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\store\\quote-actions.js",["90","91"],"import { quoteActions } from \"./quote-slice\";\r\n\r\nconst DATABASE_LINK = 'https://react-routing-42d52-default-rtdb.firebaseio.com';\r\n\r\nexport const fetchQuotes = () => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch(quoteActions.setStatus({\r\n            status: 'pending'\r\n        }))\r\n\r\n        const arrayOfQuotes = [];\r\n\r\n        const fetchQuotes = async () => {\r\n            \r\n            const response = await fetch (`${DATABASE_LINK}/quotes.json`, {\r\n                    method: 'GET'\r\n                }\r\n            );\r\n\r\n            if(!response.ok) {\r\n                throw new Error('Failed to fetch data!');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n\r\n        }\r\n\r\n\r\n        try {\r\n\r\n            const data = await fetchQuotes();\r\n\r\n\r\n            for(const key in data) {\r\n                const quoteData = {\r\n                    id: key,\r\n                    ...data[key]\r\n                }\r\n                arrayOfQuotes.push(quoteData);\r\n            }\r\n\r\n            dispatch(quoteActions.replaceQuotes({\r\n                quotes: arrayOfQuotes || []\r\n            }))\r\n\r\n            dispatch(quoteActions.setStatus({\r\n                status: 'completed'\r\n            }))\r\n            \r\n        } catch(error) {\r\n\r\n            dispatch(quoteActions.setStatus({\r\n                status: 'completed'\r\n            }))\r\n\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const addQuote = (quoteData) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(quoteActions.setStatus({\r\n            status: 'pending'\r\n        }))\r\n\r\n        const sendRequest = async () => {\r\n            const response = await fetch(`${DATABASE_LINK}/quotes.json`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    id: quoteData.id,\r\n                    quoteId: quoteData.quoteId,\r\n                    author: quoteData.author,\r\n                    description: quoteData.description\r\n                })\r\n            });\r\n\r\n            if(!response.ok) {\r\n                throw new Error('Failed to send data!')\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            \r\n            await sendRequest();\r\n\r\n            dispatch(quoteActions.addQuoteItem( {\r\n                id: quoteData.id,\r\n                author: quoteData.author,\r\n                description: quoteData.description\r\n            }))\r\n\r\n            dispatch(quoteActions.setStatus({\r\n                status: 'completed'\r\n            }))\r\n\r\n        } catch(error) {\r\n\r\n            \r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteQuote = (deleteTarget) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(quoteActions.setStatus({\r\n            status: 'pending'\r\n        }))\r\n\r\n        \r\n        const sendRequest = async () => {\r\n\r\n            const response = await fetch (`${DATABASE_LINK}/quotes/${deleteTarget.id}.json`, {\r\n                method: 'DELETE',\r\n            })\r\n            \r\n            if(!response.ok) {\r\n                throw new Error('Failed to update data!');\r\n            }\r\n\r\n            if (response.status >= 400 && response.status < 600) {\r\n                throw new Error(\"Bad response from server\");\r\n            }\r\n\r\n        }\r\n\r\n        try {\r\n\r\n            await sendRequest();\r\n\r\n            dispatch(quoteActions.deleteQuoteItem({\r\n                id: deleteTarget.id\r\n            }));\r\n\r\n            dispatch(quoteActions.setStatus({\r\n                status: 'completed'\r\n            }))\r\n    \r\n            \r\n        } catch(error) {\r\n\r\n            dispatch(quoteActions.setStatus({\r\n                status: 'completed'\r\n            }))\r\n\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getSignleQuote = (quoteId) => {\r\n    return async (dispatch) => {\r\n        const sendRequest = async () => {\r\n\r\n            const response = await fetch(`${DATABASE_LINK}/quotes/${quoteId}.json`);\r\n\r\n            if(!response.ok) {\r\n                throw new Error ('Fialed to fetch data!');\r\n            }\r\n\r\n            const data = response.json();\r\n\r\n            return data;\r\n        }\r\n\r\n        try {\r\n\r\n            const quote = await sendRequest();\r\n\r\n            const quoteData = {\r\n                id: quoteId,\r\n                ...quote\r\n            }\r\n\r\n            dispatch(quoteActions.updateSpecificQuote(quoteData));\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst addComment = (commentText) => {\r\n    return async (dispatch) => {\r\n        dispatch(quoteActions.setStatus({\r\n            status: 'pending'\r\n        }));\r\n\r\n        const sendRequest = async () => {\r\n            const response = await fetch(`${DATABASE_LINK}/comments.json`);\r\n\r\n            if(!response.ok) {\r\n                throw new Error('Failed to fetch commnets!');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n\r\n            return data;\r\n        }\r\n\r\n        try {\r\n\r\n            const commentData = await sendRequest();\r\n            \r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\NoQuotesFound.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\HighlightedQuote.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\Comments.js",["92","93"],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\LoadComments.js",["94"],"import { Link, useParams } from 'react-router-dom';\r\nimport classes from './LoadComments.module.css';\r\n\r\nconst LoadComments = (props) => {\r\n\r\n    const loadCommentsHandler = () => {\r\n        // props.onLoadComments();\r\n    }\r\n\r\n    return <div className={classes.btnComments}>\r\n        <Link className='btn' to={'/quotes'}  onClick={loadCommentsHandler} >Load Comments</Link>\r\n    </div>\r\n}\r\n\r\nexport default LoadComments;","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\CommentForm.js",["95","96"],"\r\nimport { Fragment } from 'react';\r\nimport { useRef } from 'react';\r\nimport classes from './CommentForm.module.css';\r\n\r\n\r\nconst CommentForm = (props) => {\r\n\r\n    const commentInputRef = useRef();\r\n\r\n    const addCommentHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const enteredComment = commentInputRef.current.value;\r\n\r\n    }\r\n\r\n    return <Fragment>\r\n        <div className={classes.card} >\r\n            <form className={classes.form} onSubmit={props.onLoadComments}>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='text'>Comment</label>\r\n                    <textarea id='text' rows='5' ref={commentInputRef}></textarea>\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <button className='btn'>Add Quote</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n</Fragment>\r\n}\r\n\r\n\r\nexport default CommentForm;",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":5,"column":23,"nodeType":"103","messageId":"104","endLine":5,"endColumn":34},{"ruleId":"101","severity":1,"message":"105","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":19},{"ruleId":"101","severity":1,"message":"106","line":4,"column":10,"nodeType":"103","messageId":"104","endLine":4,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":18,"column":8,"nodeType":"109","endLine":18,"endColumn":18,"suggestions":"110"},{"ruleId":"101","severity":1,"message":"111","line":200,"column":7,"nodeType":"103","messageId":"104","endLine":200,"endColumn":17},{"ruleId":"101","severity":1,"message":"112","line":221,"column":19,"nodeType":"103","messageId":"104","endLine":221,"endColumn":30},{"ruleId":"101","severity":1,"message":"113","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":13,"column":27,"nodeType":"116","messageId":"117","endLine":13,"endColumn":29},{"ruleId":"101","severity":1,"message":"118","line":1,"column":16,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"119","line":11,"column":11,"nodeType":"103","messageId":"104","endLine":11,"endColumn":28},{"ruleId":"101","severity":1,"message":"120","line":14,"column":15,"nodeType":"103","messageId":"104","endLine":14,"endColumn":29},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'fetchQuotes' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'quoteId'. Either include it or remove the dependency array.","ArrayExpression",["123"],"'addComment' is assigned a value but never used.","'commentData' is assigned a value but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useParams' is defined but never used.","'addCommentHandler' is assigned a value but never used.","'enteredComment' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [dispatch, quoteId]",{"range":"126","text":"127"},[696,706],"[dispatch, quoteId]"]