[{"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\index.js":"1","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\App.js":"2","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\layout\\Layout.js":"3","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\layout\\MainHeader.js":"4","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\pages\\AllQuotes.js":"5","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\QuoteList.js":"6","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\QuoteItem.js":"7","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\pages\\NewQuote.js":"8","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\QuoteForm.js":"9","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\UI\\LoadingSinner.js":"10","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\pages\\QuoteDetail.js":"11","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\store\\index.js":"12","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\store\\quote-slice.js":"13","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\store\\quote-actions.js":"14","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\NoQuotesFound.js":"15","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\HighlightedQuote.js":"16","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\Comments.js":"17","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\CommentForm.js":"18","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\CommentList.js":"19","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\CommentItem.js":"20","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\NoCommentsFound.js":"21"},{"size":392,"mtime":1667601002229,"results":"22","hashOfConfig":"23"},{"size":689,"mtime":1667766877584,"results":"24","hashOfConfig":"23"},{"size":261,"mtime":1667055284383,"results":"25","hashOfConfig":"23"},{"size":507,"mtime":1667048533268,"results":"26","hashOfConfig":"23"},{"size":214,"mtime":1667055011081,"results":"27","hashOfConfig":"23"},{"size":1989,"mtime":1668962269422,"results":"28","hashOfConfig":"23"},{"size":976,"mtime":1667749475834,"results":"29","hashOfConfig":"23"},{"size":144,"mtime":1667763948760,"results":"30","hashOfConfig":"23"},{"size":2380,"mtime":1668895760809,"results":"31","hashOfConfig":"23"},{"size":174,"mtime":1667594018957,"results":"32","hashOfConfig":"23"},{"size":925,"mtime":1668718489350,"results":"33","hashOfConfig":"23"},{"size":208,"mtime":1667658477590,"results":"34","hashOfConfig":"23"},{"size":1820,"mtime":1668856325208,"results":"35","hashOfConfig":"23"},{"size":8158,"mtime":1668856293633,"results":"36","hashOfConfig":"23"},{"size":332,"mtime":1667751370911,"results":"37","hashOfConfig":"23"},{"size":333,"mtime":1667764250248,"results":"38","hashOfConfig":"23"},{"size":2105,"mtime":1668813937696,"results":"39","hashOfConfig":"23"},{"size":3391,"mtime":1668898602191,"results":"40","hashOfConfig":"23"},{"size":941,"mtime":1668962215638,"results":"41","hashOfConfig":"23"},{"size":970,"mtime":1668856243545,"results":"42","hashOfConfig":"23"},{"size":189,"mtime":1668716957142,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"4s7fqg",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\index.js",[],["92","93"],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\App.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\layout\\Layout.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\layout\\MainHeader.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\pages\\AllQuotes.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\QuoteList.js",["94"],"import {  useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchQuotes } from '../../store/quote-actions';\r\nimport LoadingSpinner from '../UI/LoadingSinner';\r\nimport NoQuotesFound from './NoQuotesFound';\r\nimport QuoteItem from './QuoteItem';\r\nimport classes from './QuoteList.module.css';\r\n\r\n\r\n// const QUOTE_DATA = [\r\n//     {\r\n//         id: 1,\r\n//         title: 'Book',\r\n//         description: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.'\r\n//     },\r\n//     {\r\n//         id: 2,\r\n//         title: 'Magazine',\r\n//         description: 'The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.'\r\n//     }\r\n// ]\r\n\r\n\r\nconst QuoteList = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const quotes = useSelector(state => state.quoteReducer.quotes);\r\n    const status = useSelector(state => state.quoteReducer.status);\r\n    const [isSortingAscending, setIsSortingDescending] = useState('Descending');\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        dispatch(fetchQuotes());\r\n\r\n    }, [dispatch]);\r\n\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n          <div className='centered'>\r\n            <LoadingSpinner />\r\n          </div>\r\n        );\r\n    }\r\n\r\n    if(quotes.length === 0) {\r\n        return <NoQuotesFound />\r\n    }\r\n\r\n    \r\n    return <div className={classes.list}>\r\n        <div className={classes.sorting}>\r\n                <button >\r\n                    Sort {isSortingAscending ? 'Descending' : 'Ascending'}\r\n                </button>\r\n            </div>\r\n        { quotes.length > 0 && quotes.map((quote, index) => (\r\n            <QuoteItem \r\n                key = {index}\r\n                id = {quote.id}\r\n                title = {quote.author}\r\n                description = {quote.description}\r\n            />\r\n        ))}\r\n    </div>\r\n}\r\n\r\nexport default QuoteList;","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\QuoteItem.js",["95"],"\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './QuoteItem.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteQuote, fetchQuotes } from '../../store/quote-actions';\r\n\r\n\r\nconst QuoteItem = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteQuoteHandler = () => {\r\n        \r\n        dispatch(deleteQuote({\r\n            id: props.id\r\n        }))\r\n        \r\n    }\r\n\r\n    return <div className={classes.quoteItem}>\r\n        <div className={classes.textWrapper}>\r\n            <div className={classes.title}> {props.title} </div>\r\n            <div className={classes.description}> {props.description} </div>\r\n        </div>\r\n        <div className={classes.buttonWrapper}>\r\n            <Link className={classes.btn} to={`/quotes/${props.id}`} >View Fullscreen</Link>\r\n            <button className={classes.btn} onClick={deleteQuoteHandler}>Delete Quote </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default QuoteItem;","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\pages\\NewQuote.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\QuoteForm.js",["96","97"],"import { useEffect } from 'react';\r\nimport { Fragment, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { addQuote } from '../../store/quote-actions';\r\nimport LoadingSpinner from '../UI/LoadingSinner';\r\n\r\n\r\nimport classes from './QuoteForm.module.css';\r\n\r\nconst QuoteForm = (props) => {\r\n\r\n    const authorInputRef = useRef();\r\n    const textInputRef = useRef();\r\n    const dispatch = useDispatch();\r\n    const status = useSelector(state => state.quoteReducer.status);\r\n    const quotes = useSelector(state => state.quoteReducer.quotes);\r\n    const history = useHistory();\r\n\r\n\r\n\r\n    const addQuoteHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const quote = {};\r\n\r\n        const enteredAuthor = authorInputRef.current.value;\r\n        const enteredText = textInputRef.current.value;\r\n\r\n        if(enteredAuthor === '') {\r\n            alert('Plese fill the Author field');\r\n            return;\r\n        }\r\n\r\n        if(enteredText === '') {\r\n            alert('Plese fill the Text field');\r\n            return;\r\n        }\r\n\r\n        quote.quoteId = quotes.length + 1;\r\n        quote.author = enteredAuthor;\r\n        quote.description = enteredText;\r\n        \r\n        dispatch(addQuote(quote));\r\n        history.push('/quotes');\r\n\r\n    }\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n          <div className='centered'>\r\n            <LoadingSpinner />\r\n          </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.card} >\r\n                <form className={classes.form} onSubmit={addQuoteHandler}>\r\n                    <div className={classes.control}>\r\n                        <label htmlFor='author'>Author</label>\r\n                        <input type='text' id='author' ref={authorInputRef}/>\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                        <label htmlFor='text'>Text</label>\r\n                        <textarea id='text' rows='5' ref={textInputRef}></textarea>\r\n                    </div>\r\n                    <div className={classes.actions}>\r\n                        <button className='btn'>Add Quote</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default QuoteForm;\r\n","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\UI\\LoadingSinner.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\pages\\QuoteDetail.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\store\\index.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\store\\quote-slice.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\store\\quote-actions.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\NoQuotesFound.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\quotes\\HighlightedQuote.js",[],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\Comments.js",["98"],"import { Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchComments } from \"../../store/quote-actions\";\r\nimport LoadingSpinner from \"../UI/LoadingSinner\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport CommentList from \"./CommentList\";\r\nimport classes from './Comments.module.css';\r\nimport NoCommentsFound from \"./NoCommentsFound\";\r\n\r\n\r\nconst Comments = (props) => {\r\n\r\n    const comments =  useSelector(state => state.quoteReducer.comments);\r\n    const status = useSelector(state => state.quoteReducer.status);\r\n    const [commentFormVisible, setCommentFormVisible] = useState(false);\r\n    const [commentsLoaded, setCommentsLoaded] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const showCommentFormHandler = () => {\r\n        setCommentFormVisible(!commentFormVisible);\r\n    }\r\n\r\n    const loadCommentsHandler = () => {\r\n        // props.onLoadComments();\r\n        dispatch(fetchComments(props.quoteId));\r\n        setCommentsLoaded(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCommentsLoaded(false);\r\n        console.log(commentsLoaded);\r\n    }, [])\r\n    \r\n\r\n    if (status === 'pending') {\r\n        return (\r\n          <div className='centered'>\r\n            <LoadingSpinner />\r\n          </div>\r\n        );\r\n    }\r\n\r\n\r\n    return <Fragment>\r\n        { !commentsLoaded  && <button className={`btn ${classes.btnComment}`} onClick={loadCommentsHandler} >Load Comments</button>}\r\n        { commentsLoaded && status === 'completed' && comments.length > 0 && <CommentList quoteId = {props.quoteId} />}\r\n        { commentsLoaded && status === 'completed' && comments.length === 0 && <NoCommentsFound />}\r\n        { commentsLoaded && !commentFormVisible && status === 'completed' && <button className={`btn ${classes.btnComment}`} onClick={showCommentFormHandler} >Add Comment</button>}\r\n        { commentsLoaded && commentFormVisible && status === 'completed' && comments.length >= 0 && <CommentForm quoteId = {props.quoteId} onAddComment={showCommentFormHandler} />}\r\n    </Fragment>\r\n}\r\n\r\nexport default Comments;","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\CommentForm.js",["99"],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\CommentList.js",["100"],"import { Fragment, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CommentItem from './CommentItem';\r\nimport classes from './CommentList.module.css';\r\n\r\nconst CommentList = (props) => {\r\n\r\n    const comments = useSelector(state => state.quoteReducer.comments);\r\n\r\n    return <Fragment>\r\n            <h2>Comment List</h2>\r\n            <div className={classes.card} >\r\n                <div className={classes.commentListWrapper} >\r\n                {comments.map((comment, index) => (\r\n                    <CommentItem \r\n                        key={index}\r\n                        commentId = {comment.id}\r\n                        quoteId = {props.quoteId}\r\n                        author = {comment.author}\r\n                        text={comment.text}\r\n                    />\r\n                ))}\r\n                \r\n                </div>\r\n            </div>\r\n    </Fragment>\r\n}\r\n\r\nexport default CommentList;\r\n\r\n","D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\CommentItem.js",["101","102","103"],"D:\\React-course\\01-starting-setup\\react-routing-projects\\03-practice-project\\src\\components\\comments\\NoCommentsFound.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":30,"column":32,"nodeType":"110","messageId":"111","endLine":30,"endColumn":54},{"ruleId":"108","severity":1,"message":"112","line":5,"column":23,"nodeType":"110","messageId":"111","endLine":5,"endColumn":34},{"ruleId":"108","severity":1,"message":"113","line":1,"column":10,"nodeType":"110","messageId":"111","endLine":1,"endColumn":19},{"ruleId":"108","severity":1,"message":"114","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":14},{"ruleId":"115","severity":1,"message":"116","line":32,"column":8,"nodeType":"117","endLine":32,"endColumn":10,"suggestions":"118"},{"ruleId":"108","severity":1,"message":"119","line":5,"column":22,"nodeType":"110","messageId":"111","endLine":5,"endColumn":35},{"ruleId":"108","severity":1,"message":"120","line":1,"column":20,"nodeType":"110","messageId":"111","endLine":1,"endColumn":28},{"ruleId":"108","severity":1,"message":"119","line":5,"column":25,"nodeType":"110","messageId":"111","endLine":5,"endColumn":38},{"ruleId":"108","severity":1,"message":"121","line":9,"column":11,"nodeType":"110","messageId":"111","endLine":9,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":25,"column":17,"nodeType":"124","endLine":25,"endColumn":36},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'setIsSortingDescending' is assigned a value but never used.","Identifier","unusedVar","'fetchQuotes' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'commentsLoaded'. Either include it or remove the dependency array.","ArrayExpression",["127"],"'fetchComments' is defined but never used.","'useState' is defined but never used.","'comments' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [commentsLoaded]",{"range":"130","text":"131"},[1141,1143],"[commentsLoaded]"]